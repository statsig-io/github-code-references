"use strict";
exports.__esModule = true;
var core_1 = require("./utils/core");
/**
 * Returns the data for a Layer in the statsig console via typed get functions
 */
var Layer = /** @class */ (function () {
    function Layer(layerName, value, ruleID, logExposure) {
        if (value === void 0) { value = {}; }
        if (ruleID === void 0) { ruleID = ''; }
        if (logExposure === void 0) { logExposure = null; }
        var _a;
        if (typeof layerName !== 'string' || layerName.length === 0) {
            layerName = '';
        }
        if (value == null || typeof value !== 'object') {
            value = {};
        }
        this.name = layerName;
        this._value = (_a = (0, core_1.clone)(value)) !== null && _a !== void 0 ? _a : {};
        this._ruleID = ruleID;
        this._logExposure = logExposure;
    }
    Layer.prototype.get = function (key, defaultValue, typeGuard) {
        var _this = this;
        if (typeGuard === void 0) { typeGuard = null; }
        // @ts-ignore
        defaultValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : null;
        var val = this._value[key];
        if (val == null) {
            return defaultValue;
        }
        var logAndReturn = function () {
            var _a;
            (_a = _this._logExposure) === null || _a === void 0 ? void 0 : _a.call(_this, _this, key);
            return val;
        };
        if (typeGuard) {
            return typeGuard(val) ? logAndReturn() : defaultValue;
        }
        if (defaultValue == null) {
            return logAndReturn();
        }
        if (typeof val === typeof defaultValue &&
            Array.isArray(defaultValue) === Array.isArray(val)) {
            return logAndReturn();
        }
        return defaultValue;
    };
    Layer.prototype.getValue = function (key, defaultValue) {
        var _a, _b;
        if (defaultValue === undefined) {
            defaultValue = null;
        }
        if (key == null) {
            return defaultValue;
        }
        if (this._value[key] != null) {
            (_a = this._logExposure) === null || _a === void 0 ? void 0 : _a.call(this, this, key);
        }
        return (_b = this._value[key]) !== null && _b !== void 0 ? _b : defaultValue;
    };
    Layer.prototype.getRuleID = function () {
        return this._ruleID;
    };
    return Layer;
}());
exports["default"] = Layer;
