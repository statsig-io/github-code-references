import { IDataAdapter } from '../interfaces/IDataAdapter';
export declare type IDList = {
    creationTime: number;
    fileID: string;
    ids: Record<string, boolean>;
    readBytes: number;
    url: string;
};
export declare type IDListsLookupResponse = Record<string, {
    url?: string;
    fileID?: string;
    creationTime: number;
    size?: number;
}>;
export declare type IDListsLookupBootstrap = string[];
export default abstract class IDListUtil {
    static parseLookupResponse(input: unknown): IDListsLookupResponse | null;
    static parseBootstrapLookup(input: string): IDListsLookupBootstrap | null;
    static updateIdList(lists: Record<string, IDList>, name: string, data: string): void;
    static removeOldIdLists(lists: Record<string, IDList>, lookup: IDListsLookupResponse): void;
    static getIdListDataStoreKey(name: string): string;
    static saveToDataAdapter(dataAdapter: IDataAdapter, lists: Record<string, IDList>): Promise<void>;
}
